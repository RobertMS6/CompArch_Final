# MinGW does not support an executable header.
:ivl_version "0.9.2 " "(v0_9_2)";
:vpi_time_precision - 12;
:vpi_module "system";
:vpi_module "v2005_math";
:vpi_module "va_math";
S_0060F7C0 .scope module, "processor_tb" "processor_tb" 2 3;
 .timescale -9 -12;
v00661820_0 .var "clk", 0 0;
v00661668_0 .var "rst", 0 0;
S_0060ED20 .scope module, "test" "processor" 2 6, 3 3, S_0060F7C0;
 .timescale -9 -12;
v0065FCF8_0 .net "ALU_ctr_out", 3 0, v0065F798_0; 1 drivers
v00660118_0 .var "ALU_inA", 31 0;
v0065F8D8_0 .var "ALU_inB", 31 0;
v0065FCA0_0 .var "ALU_op", 1 0;
v0065FE00_0 .net "ALU_out", 31 0, v0065F428_0; 1 drivers
v0065FC48_0 .net "ALUsrc_out", 31 0, v00660538_0; 1 drivers
v0065FD50_0 .var "ALUsrc_sel", 0 0;
v0065FF08_0 .var "MemWrite_sel", 0 0;
v0065FB98_0 .var "MemtoReg_sel", 0 0;
v0065FE58_0 .var "RegDest_inB", 4 0;
v0065F9E0_0 .var "RegDst_inA", 4 0;
v0065FEB0_0 .var "RegWrite_sel", 0 0;
v00660068_0 .var "branch_sel", 0 0;
v0065FF60_0 .net "clk", 0 0, v00661820_0; 1 drivers
v0065FFB8_0 .net "control_logic", 9 0, v00660170_0; 1 drivers
v0065FA90_0 .var "func_code", 5 0;
v0065F988_0 .var "imm", 15 0;
v0065F930_0 .net "imm_extend", 31 0, v006604E0_0; 1 drivers
v00660010_0 .net "instruction", 31 0, L_00661FB0; 1 drivers
v0065FAE8_0 .var "jump_sel", 0 0;
v00660278_0 .var "memRead_sel", 0 0;
v0065FBF0_0 .net "newPC", 31 0, v0065EDF8_0; 1 drivers
v00661140_0 .var "opcode", 5 0;
v00661090_0 .var "pc", 31 0;
v006617C8_0 .var "rAddrA", 4 0;
v00661198_0 .var "rAddrB", 4 0;
v006611F0_0 .net "rDataA", 31 0, v006601C8_0; 1 drivers
v00661610_0 .net "rDataB", 31 0, v0065FB40_0; 1 drivers
v006619D8_0 .net "rMemData", 31 0, L_00661038; 1 drivers
v006610E8_0 .var "regDst_sel", 0 0;
v006612A0_0 .net "rst", 0 0, v00661668_0; 1 drivers
v006612F8_0 .net "wAddr", 4 0, v006607A0_0; 1 drivers
v006615B8_0 .net "wData", 31 0, v006605E8_0; 1 drivers
v00661248_0 .net "zero", 0 0, v0065F6E8_0; 1 drivers
E_0060C6F0 .event posedge, v0065FF60_0;
S_0060E858 .scope module, "regsister" "reg32_32" 3 34, 4 3, S_0060ED20;
 .timescale -9 -12;
v0065FA38_0 .net "clk", 0 0, C4<z>; 0 drivers
v0065F880_0 .net "rAddrA", 4 0, v006617C8_0; 1 drivers
v006600C0_0 .net "rAddrB", 4 0, v00661198_0; 1 drivers
v006601C8_0 .var "rDataA", 31 0;
v0065FB40_0 .var "rDataB", 31 0;
v006602D0 .array "regFile", 31 0, 31 0;
v0065F828_0 .alias "wAddr", 4 0, v006612F8_0;
v0065FDA8_0 .alias "wData", 31 0, v006615B8_0;
v00660220_0 .net "writeEn", 0 0, v0065FEB0_0; 1 drivers
E_0060D3F0 .event posedge, v0065FA38_0;
S_0060E0E8 .scope module, "control" "ctrl" 3 35, 5 3, S_0060ED20;
 .timescale -9 -12;
v00660380_0 .net "opcode", 5 0, v00661140_0; 1 drivers
v00660170_0 .var "out", 9 0;
E_0060D290 .event edge, v00660380_0;
S_0060E308 .scope module, "RegDst" "twoToOneMux_5" 3 36, 6 3, S_0060ED20;
 .timescale -9 -12;
v00660640_0 .net "inA", 4 0, v0065F9E0_0; 1 drivers
v00660748_0 .net "inB", 4 0, v0065FE58_0; 1 drivers
v006607A0_0 .var "out", 4 0;
v00660698_0 .net "sel", 0 0, v006610E8_0; 1 drivers
E_0060D270 .event edge, v00660698_0, v00660640_0, v00660748_0;
S_0060DFD8 .scope module, "MemtoReg" "twoToOneMux_32" 3 37, 7 3, S_0060ED20;
 .timescale -9 -12;
v00660328_0 .alias "inA", 31 0, v0065FE00_0;
v00660430_0 .alias "inB", 31 0, v006619D8_0;
v006605E8_0 .var "out", 31 0;
v00660488_0 .net "sel", 0 0, v0065FB98_0; 1 drivers
E_0060D210 .event edge, v00660488_0, v00610B08_0, v00610C10_0;
S_0060E638 .scope module, "ALUsrc" "twoToOneMux_32" 3 38, 7 3, S_0060ED20;
 .timescale -9 -12;
v006603D8_0 .alias "inA", 31 0, v00661610_0;
v00660590_0 .alias "inB", 31 0, v0065F930_0;
v00660538_0 .var "out", 31 0;
v006606F0_0 .net "sel", 0 0, v0065FD50_0; 1 drivers
E_0060D0D0 .event edge, v006606F0_0, v00610CC0_0, v006604E0_0;
S_0060DF50 .scope module, "immediate" "signExtend" 3 39, 8 3, S_0060ED20;
 .timescale -9 -12;
v0065F740_0 .net "extend", 15 0, v0065F988_0; 1 drivers
v006604E0_0 .var "extended", 31 0;
E_0060D1D0 .event edge, v0065F740_0;
S_0060DCA8 .scope module, "ALU_unit" "ALU" 3 41, 9 3, S_0060ED20;
 .timescale -9 -12;
L_00662660 .functor OR 32, L_00661400, v006601C8_0, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_00662708 .functor OR 32, L_00662660, v00660538_0, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
v0065F3D0_0 .alias "ALUCtrl", 3 0, v0065FCF8_0;
v0065F428_0 .var "ALUResult", 31 0;
v0065F4D8_0 .net *"_s3", 27 0, C4<0000000000000000000000000000>; 1 drivers
v0065F530_0 .net *"_s4", 31 0, L_00661400; 1 drivers
v0065F588_0 .net *"_s5", 31 0, L_00662660; 1 drivers
v0065F5E0_0 .net *"_s7", 31 0, L_00662708; 1 drivers
v0065F638_0 .alias "inA", 31 0, v006611F0_0;
v0065F690_0 .alias "inB", 31 0, v0065FC48_0;
v0065F6E8_0 .var "zero", 0 0;
E_0060D0B0 .event edge, L_00662708;
L_00661400 .concat [ 4 28 0 0], v0065F798_0, C4<0000000000000000000000000000>;
S_0060E170 .scope module, "ALU_ctrl_unit" "ALUCtrl" 3 42, 10 3, S_0060ED20;
 .timescale -9 -12;
L_00662040 .functor OR 6, L_00661A88, v0065FA90_0, C4<000000>, C4<000000>;
v0065EE50_0 .net "ALUop", 1 0, v0065FCA0_0; 1 drivers
v0065F008_0 .net *"_s3", 3 0, C4<0000>; 1 drivers
v0065F480_0 .net *"_s4", 5 0, L_00661A88; 1 drivers
v0065F320_0 .net *"_s5", 5 0, L_00662040; 1 drivers
v0065F378_0 .net "funct", 5 0, v0065FA90_0; 1 drivers
v0065F798_0 .var "out", 3 0;
E_0060D170 .event edge, L_00662040;
L_00661A88 .concat [ 2 4 0 0], v0065FCA0_0, C4<0000>;
S_0060E5B0 .scope module, "j" "jump" 3 43, 11 3, S_0060ED20;
 .timescale -9 -12;
v0065EC98_0 .net "addrTemp", 31 0, v0065EA88_0; 1 drivers
v0065EBE8_0 .net "bInstr", 31 0, v0065E878_0; 1 drivers
v0065F1C0_0 .var "bInstrTemp", 31 0;
v0065F270_0 .var "branch_ctl", 0 0;
v0065F2C8_0 .net "branch_sel", 0 0, v00660068_0; 1 drivers
v0065ED48_0 .var "instrTemp", 15 0;
v0065EEA8_0 .alias "instruction", 31 0, v00660010_0;
v0065E980_0 .var "jInstrTemp", 31 0;
v0065EB38_0 .net "jump_sel", 0 0, v0065FAE8_0; 1 drivers
v0065EDF8_0 .var "newPC", 31 0;
v0065E8D0_0 .net "newPCTemp", 31 0, v0065EC40_0; 1 drivers
v0065F0B8_0 .net "pc", 31 0, v00661090_0; 1 drivers
v0065EDA0_0 .var "pcTemp", 31 0;
v0065E9D8_0 .alias "rst", 0 0, v006612A0_0;
v0065EA30_0 .alias "zero", 0 0, v00661248_0;
E_0060CDD0/0 .event edge, v0065E9D8_0, v0065F0B8_0, v00610ED0_0, v0065E878_0;
E_0060CDD0/1 .event edge, v0065EFB0_0, v0065EA30_0, v0065F2C8_0, v0065EC40_0;
E_0060CDD0 .event/or E_0060CDD0/0, E_0060CDD0/1;
S_0060E418 .scope module, "bTemp" "signExtend" 11 12, 8 3, S_0060E5B0;
 .timescale -9 -12;
v0065F060_0 .net "extend", 15 0, v0065ED48_0; 1 drivers
v0065E878_0 .var "extended", 31 0;
E_0060CF90 .event edge, v0065F060_0;
S_0060E528 .scope module, "branchMux" "twoToOneMux_32" 11 13, 7 3, S_0060E5B0;
 .timescale -9 -12;
v0065EFB0_0 .net "inA", 31 0, v0065EDA0_0; 1 drivers
v0065F218_0 .net "inB", 31 0, v0065F1C0_0; 1 drivers
v0065EA88_0 .var "out", 31 0;
v0065EAE0_0 .net "sel", 0 0, v0065F270_0; 1 drivers
E_0060D010 .event edge, v0065EAE0_0, v0065EFB0_0, v0065F218_0;
S_0060E4A0 .scope module, "jumpMux" "twoToOneMux_32" 11 14, 7 3, S_0060E5B0;
 .timescale -9 -12;
v0065EF58_0 .alias "inA", 31 0, v0065EC98_0;
v0065EB90_0 .net "inB", 31 0, v0065E980_0; 1 drivers
v0065EC40_0 .var "out", 31 0;
v0065E928_0 .alias "sel", 0 0, v0065EB38_0;
E_0060CF50 .event edge, v0065E928_0, v0065EF58_0, v0065EB90_0;
S_0060E060 .scope module, "data_memory" "Memory" 3 44, 12 8, S_0060ED20;
 .timescale -9 -12;
P_0060C774 .param/l "MEM_SIZE" 12 32, C4<00000000000000000010000000000000>;
v00610848_0 .net *"_s0", 7 0, L_00661458; 1 drivers
v00610320_0 .net *"_s10", 7 0, L_00661508; 1 drivers
v00610740_0 .net *"_s12", 2 0, C4<010>; 1 drivers
v00610950_0 .net *"_s16", 28 0, C4<00000000000000000000000000000>; 1 drivers
v006106E8_0 .net *"_s17", 31 0, L_00661560; 1 drivers
v00610A00_0 .net *"_s18", 31 0, L_00661718; 1 drivers
v00610428_0 .net *"_s2", 2 0, C4<011>; 1 drivers
v00610690_0 .net *"_s20", 7 0, L_00661980; 1 drivers
v00610A58_0 .net *"_s22", 1 0, C4<01>; 1 drivers
v0060FFB0_0 .net *"_s26", 29 0, C4<000000000000000000000000000000>; 1 drivers
v00610798_0 .net *"_s27", 31 0, L_00661770; 1 drivers
v00610008_0 .net *"_s28", 31 0, L_00661878; 1 drivers
v00610110_0 .net *"_s30", 7 0, L_00661928; 1 drivers
v00610480_0 .net *"_s32", 31 0, L_00661AE0; 1 drivers
v006100B8_0 .net *"_s34", 31 0, C4<00000000000000000000000000000000>; 1 drivers
v006104D8_0 .net *"_s38", 7 0, L_00661E50; 1 drivers
v00610168_0 .net *"_s40", 2 0, C4<011>; 1 drivers
v006105E0_0 .net *"_s44", 28 0, C4<00000000000000000000000000000>; 1 drivers
v006108F8_0 .net *"_s45", 31 0, L_00661DF8; 1 drivers
v006101C0_0 .net *"_s46", 31 0, L_00661EA8; 1 drivers
v006109A8_0 .net *"_s48", 7 0, L_00661B90; 1 drivers
v00610378_0 .net *"_s50", 2 0, C4<010>; 1 drivers
v006108A0_0 .net *"_s54", 28 0, C4<00000000000000000000000000000>; 1 drivers
v00610530_0 .net *"_s55", 31 0, L_00661F00; 1 drivers
v00610588_0 .net *"_s56", 31 0, L_00661BE8; 1 drivers
v00610060_0 .net *"_s58", 7 0, L_00661B38; 1 drivers
v00610218_0 .net *"_s6", 28 0, C4<00000000000000000000000000000>; 1 drivers
v00610638_0 .net *"_s60", 1 0, C4<01>; 1 drivers
v006107F0_0 .net *"_s64", 29 0, C4<000000000000000000000000000000>; 1 drivers
v00610F28_0 .net *"_s65", 31 0, L_00661DA0; 1 drivers
v00610B60_0 .net *"_s66", 31 0, L_00661F58; 1 drivers
v00610AB0_0 .net *"_s68", 7 0, L_00661D48; 1 drivers
v00610E78_0 .net *"_s7", 31 0, L_00661A30; 1 drivers
v00610BB8_0 .net *"_s8", 31 0, L_006614B0; 1 drivers
v00610B08_0 .alias "data_addr", 32 1, v0065FE00_0;
v00610D18_0 .var "data_addr_reg", 31 0;
v00610CC0_0 .alias "data_in", 31 0, v00661610_0;
v00610C10_0 .alias "data_out", 31 0, v006619D8_0;
v00610C68_0 .var/i "file", 31 0;
v00610D70_0 .var/i "i", 31 0;
v00610E20_0 .alias "inst_addr", 32 1, v0065FBF0_0;
v00610DC8_0 .var "inst_addr_reg", 31 0;
v00610ED0_0 .alias "instr", 31 0, v00660010_0;
v0065F110_0 .net "mem_read", 0 0, v00660278_0; 1 drivers
v0065ECF0_0 .net "mem_write", 0 0, v0065FF08_0; 1 drivers
v0065F168 .array "memory", 0 8191, 7 0;
v0065EF00_0 .var/i "r", 31 0;
v0065E820_0 .var "rest", 95 0;
E_0060CFF0 .event posedge, v0065ECF0_0;
L_00661458 .array/port v0065F168, L_006614B0;
L_00661A30 .concat [ 3 29 0 0], C4<011>, C4<00000000000000000000000000000>;
L_006614B0 .arith/sum 32, v0065F428_0, L_00661A30;
L_00661508 .array/port v0065F168, L_00661718;
L_00661560 .concat [ 3 29 0 0], C4<010>, C4<00000000000000000000000000000>;
L_00661718 .arith/sum 32, v0065F428_0, L_00661560;
L_00661980 .array/port v0065F168, L_00661878;
L_00661770 .concat [ 2 30 0 0], C4<01>, C4<000000000000000000000000000000>;
L_00661878 .arith/sum 32, v0065F428_0, L_00661770;
L_00661928 .array/port v0065F168, v0065F428_0;
L_00661AE0 .concat [ 8 8 8 8], L_00661928, L_00661980, L_00661508, L_00661458;
L_00661038 .functor MUXZ 32, C4<00000000000000000000000000000000>, L_00661AE0, v00660278_0, C4<>;
L_00661E50 .array/port v0065F168, L_00661EA8;
L_00661DF8 .concat [ 3 29 0 0], C4<011>, C4<00000000000000000000000000000>;
L_00661EA8 .arith/sum 32, v0065EDF8_0, L_00661DF8;
L_00661B90 .array/port v0065F168, L_00661BE8;
L_00661F00 .concat [ 3 29 0 0], C4<010>, C4<00000000000000000000000000000>;
L_00661BE8 .arith/sum 32, v0065EDF8_0, L_00661F00;
L_00661B38 .array/port v0065F168, L_00661F58;
L_00661DA0 .concat [ 2 30 0 0], C4<01>, C4<000000000000000000000000000000>;
L_00661F58 .arith/sum 32, v0065EDF8_0, L_00661DA0;
L_00661D48 .array/port v0065F168, v0065EDF8_0;
L_00661FB0 .concat [ 8 8 8 8], L_00661D48, L_00661B38, L_00661B90, L_00661E50;
S_0060DDB8 .scope begin, "file_block" "file_block" 12 43, 12 43, S_0060E060;
 .timescale -9 -12;
S_0060F848 .scope module, "twoToOneMux" "twoToOneMux" 13 3;
 .timescale -9 -12;
v00661350_0 .net "inA", 1 0, C4<zz>; 0 drivers
v006613A8_0 .net "inB", 1 0, C4<zz>; 0 drivers
v006616C0_0 .var "out", 1 0;
v006618D0_0 .net "sel", 0 0, C4<z>; 0 drivers
E_0060D2B0 .event edge, v006618D0_0, v00661350_0, v006613A8_0;
    .scope S_0060E858;
T_0 ;
    %wait E_0060D3F0;
    %ix/getv 3, v0065F880_0;
    %load/av 8, v006602D0, 32;
    %set/v v006601C8_0, 8, 32;
    %ix/getv 3, v006600C0_0;
    %load/av 8, v006602D0, 32;
    %set/v v0065FB40_0, 8, 32;
    %load/v 8, v00660220_0, 1;
    %jmp/0xz  T_0.0, 8;
    %load/v 8, v0065FDA8_0, 32;
    %ix/getv 3, v0065F828_0;
   %jmp/1 t_0, 4;
   %ix/load 1, 0, 0;
   %set/av v006602D0, 8, 32;
t_0 ;
T_0.0 ;
    %jmp T_0;
    .thread T_0;
    .scope S_0060E0E8;
T_1 ;
    %wait E_0060D290;
    %load/v 8, v00660380_0, 6;
    %cmp/x 8, 0, 6;
    %jmp/1 T_1.0, 4;
    %movi 14, 8, 6;
    %cmp/x 8, 14, 6;
    %jmp/1 T_1.1, 4;
    %movi 14, 4, 6;
    %cmp/x 8, 14, 6;
    %jmp/1 T_1.2, 4;
    %movi 14, 2, 6;
    %cmp/x 8, 14, 6;
    %jmp/1 T_1.3, 4;
    %movi 14, 35, 6;
    %cmp/x 8, 14, 6;
    %jmp/1 T_1.4, 4;
    %movi 14, 43, 6;
    %cmp/x 8, 14, 6;
    %jmp/1 T_1.5, 4;
    %jmp T_1.6;
T_1.0 ;
    %movi 8, 529, 10;
    %set/v v00660170_0, 8, 10;
    %jmp T_1.6;
T_1.1 ;
    %movi 8, 3, 10;
    %set/v v00660170_0, 8, 10;
    %jmp T_1.6;
T_1.2 ;
    %movi 8, 8, 5;
    %mov 13, 2, 1;
    %movi 14, 2, 3;
    %mov 17, 2, 1;
    %set/v v00660170_0, 8, 10;
    %jmp T_1.6;
T_1.3 ;
    %movi 8, 0, 1;
    %mov 9, 2, 1;
    %movi 10, 0, 1;
    %mov 11, 2, 3;
    %movi 14, 4, 3;
    %mov 17, 2, 1;
    %set/v v00660170_0, 8, 10;
    %jmp T_1.6;
T_1.4 ;
    %movi 8, 99, 10;
    %set/v v00660170_0, 8, 10;
    %jmp T_1.6;
T_1.5 ;
    %movi 8, 6, 5;
    %mov 13, 2, 1;
    %movi 14, 0, 3;
    %mov 17, 2, 1;
    %set/v v00660170_0, 8, 10;
    %jmp T_1.6;
T_1.6 ;
    %jmp T_1;
    .thread T_1, $push;
    .scope S_0060E308;
T_2 ;
    %wait E_0060D270;
    %load/v 8, v00660698_0, 1;
    %cmpi/u 8, 0, 1;
    %jmp/0xz  T_2.0, 4;
    %load/v 8, v00660640_0, 5;
    %set/v v006607A0_0, 8, 5;
    %jmp T_2.1;
T_2.0 ;
    %load/v 8, v00660748_0, 5;
    %set/v v006607A0_0, 8, 5;
T_2.1 ;
    %jmp T_2;
    .thread T_2, $push;
    .scope S_0060DFD8;
T_3 ;
    %wait E_0060D210;
    %load/v 8, v00660488_0, 1;
    %cmpi/u 8, 0, 1;
    %jmp/0xz  T_3.0, 4;
    %load/v 8, v00660328_0, 32;
    %set/v v006605E8_0, 8, 32;
    %jmp T_3.1;
T_3.0 ;
    %load/v 8, v00660430_0, 32;
    %set/v v006605E8_0, 8, 32;
T_3.1 ;
    %jmp T_3;
    .thread T_3, $push;
    .scope S_0060E638;
T_4 ;
    %wait E_0060D0D0;
    %load/v 8, v006606F0_0, 1;
    %cmpi/u 8, 0, 1;
    %jmp/0xz  T_4.0, 4;
    %load/v 8, v006603D8_0, 32;
    %set/v v00660538_0, 8, 32;
    %jmp T_4.1;
T_4.0 ;
    %load/v 8, v00660590_0, 32;
    %set/v v00660538_0, 8, 32;
T_4.1 ;
    %jmp T_4;
    .thread T_4, $push;
    .scope S_0060DF50;
T_5 ;
    %wait E_0060D1D0;
    %load/v 8, v0065F740_0, 16;
    %ix/load 1, 15, 0;
    %mov 4, 0, 1;
    %jmp/1 T_5.0, 4;
    %load/x1p 86, v0065F740_0, 1;
    %jmp T_5.1;
T_5.0 ;
    %mov 86, 2, 1;
T_5.1 ;
    %mov 55, 86, 1; Move signal select into place
    %mov 85, 55, 1; Repetition 31
    %mov 84, 55, 1; Repetition 30
    %mov 83, 55, 1; Repetition 29
    %mov 82, 55, 1; Repetition 28
    %mov 81, 55, 1; Repetition 27
    %mov 80, 55, 1; Repetition 26
    %mov 79, 55, 1; Repetition 25
    %mov 78, 55, 1; Repetition 24
    %mov 77, 55, 1; Repetition 23
    %mov 76, 55, 1; Repetition 22
    %mov 75, 55, 1; Repetition 21
    %mov 74, 55, 1; Repetition 20
    %mov 73, 55, 1; Repetition 19
    %mov 72, 55, 1; Repetition 18
    %mov 71, 55, 1; Repetition 17
    %mov 70, 55, 1; Repetition 16
    %mov 69, 55, 1; Repetition 15
    %mov 68, 55, 1; Repetition 14
    %mov 67, 55, 1; Repetition 13
    %mov 66, 55, 1; Repetition 12
    %mov 65, 55, 1; Repetition 11
    %mov 64, 55, 1; Repetition 10
    %mov 63, 55, 1; Repetition 9
    %mov 62, 55, 1; Repetition 8
    %mov 61, 55, 1; Repetition 7
    %mov 60, 55, 1; Repetition 6
    %mov 59, 55, 1; Repetition 5
    %mov 58, 55, 1; Repetition 4
    %mov 57, 55, 1; Repetition 3
    %mov 56, 55, 1; Repetition 2
    %mov 24, 55, 31;
    %set/v v006604E0_0, 8, 32;
    %jmp T_5;
    .thread T_5, $push;
    .scope S_0060DCA8;
T_6 ;
    %wait E_0060D0B0;
    %load/v 8, v0065F3D0_0, 4;
    %cmpi/u 8, 2, 4;
    %jmp/1 T_6.0, 6;
    %cmpi/u 8, 6, 4;
    %jmp/1 T_6.1, 6;
    %set/v v0065F428_0, 2, 32;
    %set/v v0065F6E8_0, 1, 1;
    %jmp T_6.3;
T_6.0 ;
    %load/v 8, v0065F638_0, 32;
    %load/v 40, v0065F690_0, 32;
    %add 8, 40, 32;
    %set/v v0065F428_0, 8, 32;
    %jmp T_6.3;
T_6.1 ;
    %load/v 8, v0065F638_0, 32;
    %mov 40, 0, 1;
    %load/v 41, v0065F690_0, 32;
    %mov 73, 0, 1;
    %sub 8, 41, 33;
    %cmpi/u 8, 0, 33;
    %jmp/0xz  T_6.4, 4;
    %set/v v0065F428_0, 2, 32;
    %set/v v0065F6E8_0, 1, 1;
    %jmp T_6.5;
T_6.4 ;
    %set/v v0065F428_0, 2, 32;
    %set/v v0065F6E8_0, 0, 1;
T_6.5 ;
    %jmp T_6.3;
T_6.3 ;
    %jmp T_6;
    .thread T_6, $push;
    .scope S_0060E170;
T_7 ;
    %wait E_0060D170;
    %load/v 8, v0065EE50_0, 2;
    %cmpi/u 8, 0, 2;
    %jmp/1 T_7.0, 6;
    %cmpi/u 8, 1, 2;
    %jmp/1 T_7.1, 6;
    %cmpi/u 8, 2, 2;
    %jmp/1 T_7.2, 6;
    %set/v v0065F798_0, 2, 4;
    %jmp T_7.4;
T_7.0 ;
    %movi 8, 2, 4;
    %set/v v0065F798_0, 8, 4;
    %jmp T_7.4;
T_7.1 ;
    %movi 8, 6, 4;
    %set/v v0065F798_0, 8, 4;
    %jmp T_7.4;
T_7.2 ;
    %movi 8, 2, 4;
    %set/v v0065F798_0, 8, 4;
    %jmp T_7.4;
T_7.4 ;
    %jmp T_7;
    .thread T_7, $push;
    .scope S_0060E418;
T_8 ;
    %wait E_0060CF90;
    %load/v 8, v0065F060_0, 16;
    %ix/load 1, 15, 0;
    %mov 4, 0, 1;
    %jmp/1 T_8.0, 4;
    %load/x1p 86, v0065F060_0, 1;
    %jmp T_8.1;
T_8.0 ;
    %mov 86, 2, 1;
T_8.1 ;
    %mov 55, 86, 1; Move signal select into place
    %mov 85, 55, 1; Repetition 31
    %mov 84, 55, 1; Repetition 30
    %mov 83, 55, 1; Repetition 29
    %mov 82, 55, 1; Repetition 28
    %mov 81, 55, 1; Repetition 27
    %mov 80, 55, 1; Repetition 26
    %mov 79, 55, 1; Repetition 25
    %mov 78, 55, 1; Repetition 24
    %mov 77, 55, 1; Repetition 23
    %mov 76, 55, 1; Repetition 22
    %mov 75, 55, 1; Repetition 21
    %mov 74, 55, 1; Repetition 20
    %mov 73, 55, 1; Repetition 19
    %mov 72, 55, 1; Repetition 18
    %mov 71, 55, 1; Repetition 17
    %mov 70, 55, 1; Repetition 16
    %mov 69, 55, 1; Repetition 15
    %mov 68, 55, 1; Repetition 14
    %mov 67, 55, 1; Repetition 13
    %mov 66, 55, 1; Repetition 12
    %mov 65, 55, 1; Repetition 11
    %mov 64, 55, 1; Repetition 10
    %mov 63, 55, 1; Repetition 9
    %mov 62, 55, 1; Repetition 8
    %mov 61, 55, 1; Repetition 7
    %mov 60, 55, 1; Repetition 6
    %mov 59, 55, 1; Repetition 5
    %mov 58, 55, 1; Repetition 4
    %mov 57, 55, 1; Repetition 3
    %mov 56, 55, 1; Repetition 2
    %mov 24, 55, 31;
    %set/v v0065E878_0, 8, 32;
    %jmp T_8;
    .thread T_8, $push;
    .scope S_0060E528;
T_9 ;
    %wait E_0060D010;
    %load/v 8, v0065EAE0_0, 1;
    %cmpi/u 8, 0, 1;
    %jmp/0xz  T_9.0, 4;
    %load/v 8, v0065EFB0_0, 32;
    %set/v v0065EA88_0, 8, 32;
    %jmp T_9.1;
T_9.0 ;
    %load/v 8, v0065F218_0, 32;
    %set/v v0065EA88_0, 8, 32;
T_9.1 ;
    %jmp T_9;
    .thread T_9, $push;
    .scope S_0060E4A0;
T_10 ;
    %wait E_0060CF50;
    %load/v 8, v0065E928_0, 1;
    %cmpi/u 8, 0, 1;
    %jmp/0xz  T_10.0, 4;
    %load/v 8, v0065EF58_0, 32;
    %set/v v0065EC40_0, 8, 32;
    %jmp T_10.1;
T_10.0 ;
    %load/v 8, v0065EB90_0, 32;
    %set/v v0065EC40_0, 8, 32;
T_10.1 ;
    %jmp T_10;
    .thread T_10, $push;
    .scope S_0060E5B0;
T_11 ;
    %wait E_0060CDD0;
    %load/v 8, v0065E9D8_0, 1;
    %jmp/0xz  T_11.0, 8;
    %movi 8, 4096, 32;
    %set/v v0065EDF8_0, 8, 32;
    %jmp T_11.1;
T_11.0 ;
    %load/v 8, v0065F0B8_0, 32;
    %mov 40, 0, 1;
   %addi 8, 4, 33;
    %set/v v0065EDA0_0, 8, 32;
    %load/v 8, v0065EEA8_0, 16; Only need 16 of 32 bits
; Save base=8 wid=16 in lookaside.
    %set/v v0065ED48_0, 8, 16;
    %load/v 8, v0065EBE8_0, 32;
    %ix/load 0, 2, 0;
    %mov 4, 0, 1;
    %shiftl/i0  8, 32;
    %load/v 40, v0065EDA0_0, 32;
    %add 8, 40, 32;
    %set/v v0065F1C0_0, 8, 32;
    %load/v 8, v0065EA30_0, 1;
    %load/v 9, v0065F2C8_0, 1;
    %and 8, 9, 1;
    %set/v v0065F270_0, 8, 1;
    %mov 8, 0, 2;
    %load/v 10, v0065EEA8_0, 26; Select 26 out of 32 bits
    %mov 36, 0, 4;
    %set/v v0065E980_0, 8, 32;
    %load/v 8, v0065E8D0_0, 32;
    %set/v v0065EDF8_0, 8, 32;
T_11.1 ;
    %jmp T_11;
    .thread T_11, $push;
    .scope S_0060E060;
T_12 ;
    %fork t_2, S_0060DDB8;
    %jmp t_1;
t_2 ;
    %vpi_func 12 45 "$fopen", 8, 32, "matrix.hexdump", "r";
    %set/v v00610C68_0, 8, 32;
    %load/v 8, v00610C68_0, 32;
    %cmpi/u 8, 0, 32;
    %jmp/0xz  T_12.0, 4;
    %disable S_0060DDB8;
T_12.0 ;
    %set/v v00610D70_0, 0, 32;
T_12.2 ;
    %load/v 8, v00610D70_0, 32;
   %cmpi/s 8, 6, 32;
    %jmp/0xz T_12.3, 5;
    %vpi_func 12 52 "$fscanf", 8, 32, v00610C68_0, "%h  ", v00610D18_0;
    %set/v v0065EF00_0, 8, 32;
    %ix/load 0, 1, 0;
    %load/vp0 40, v00610D18_0, 32;
    %ix/load 0, 2, 0;
    %load/vp0 72, v00610D18_0, 32;
    %ix/load 0, 3, 0;
    %load/vp0 104, v00610D18_0, 32;
    %ix/load 0, 4, 0;
    %load/vp0 136, v00610D18_0, 32;
    %ix/load 0, 5, 0;
    %load/vp0 168, v00610D18_0, 32;
    %ix/load 0, 6, 0;
    %load/vp0 200, v00610D18_0, 32;
    %ix/load 0, 7, 0;
    %load/vp0 232, v00610D18_0, 32;
    %ix/load 0, 8, 0;
    %load/vp0 264, v00610D18_0, 32;
    %ix/load 0, 9, 0;
    %load/vp0 296, v00610D18_0, 32;
    %ix/load 0, 10, 0;
    %load/vp0 328, v00610D18_0, 32;
    %ix/load 0, 11, 0;
    %load/vp0 360, v00610D18_0, 32;
    %ix/load 0, 12, 0;
    %load/vp0 392, v00610D18_0, 32;
    %ix/load 0, 13, 0;
    %load/vp0 424, v00610D18_0, 32;
    %ix/load 0, 14, 0;
    %load/vp0 456, v00610D18_0, 32;
    %ix/load 0, 15, 0;
    %load/vp0 488, v00610D18_0, 32;
    %vpi_func 12 53 "$fscanf", 8, 32, v00610C68_0, "%h %h %h %h %h %h %h %h  %h %h %h %h %h %h %h %h\012", &A<v0065F168, v00610D18_0 >, &A<v0065F168, 40 32>, &A<v0065F168, 72 32>, &A<v0065F168, 104 32>, &A<v0065F168, 136 32>, &A<v0065F168, 168 32>, &A<v0065F168, 200 32>, &A<v0065F168, 232 32>, &A<v0065F168, 264 32>, &A<v0065F168, 296 32>, &A<v0065F168, 328 32>, &A<v0065F168, 360 32>, &A<v0065F168, 392 32>, &A<v0065F168, 424 32>, &A<v0065F168, 456 32>, &A<v0065F168, 488 32>;
    %set/v v0065EF00_0, 8, 32;
    %ix/load 0, 1, 0;
    %load/vp0/s 8, v00610D70_0, 32;
    %set/v v00610D70_0, 8, 32;
    %jmp T_12.2;
T_12.3 ;
    %vpi_func 12 56 "$fscanf", 8, 32, v00610C68_0, "%s\012", v0065E820_0;
    %set/v v0065EF00_0, 8, 32;
    %set/v v00610D70_0, 0, 32;
T_12.4 ;
    %load/v 8, v00610D70_0, 32;
   %cmpi/s 8, 9, 32;
    %jmp/0xz T_12.5, 5;
    %vpi_func 12 59 "$fscanf", 8, 32, v00610C68_0, "%h  ", v00610DC8_0;
    %set/v v0065EF00_0, 8, 32;
    %ix/load 0, 1, 0;
    %load/vp0 40, v00610DC8_0, 32;
    %ix/load 0, 2, 0;
    %load/vp0 72, v00610DC8_0, 32;
    %ix/load 0, 3, 0;
    %load/vp0 104, v00610DC8_0, 32;
    %ix/load 0, 4, 0;
    %load/vp0 136, v00610DC8_0, 32;
    %ix/load 0, 5, 0;
    %load/vp0 168, v00610DC8_0, 32;
    %ix/load 0, 6, 0;
    %load/vp0 200, v00610DC8_0, 32;
    %ix/load 0, 7, 0;
    %load/vp0 232, v00610DC8_0, 32;
    %ix/load 0, 8, 0;
    %load/vp0 264, v00610DC8_0, 32;
    %ix/load 0, 9, 0;
    %load/vp0 296, v00610DC8_0, 32;
    %ix/load 0, 10, 0;
    %load/vp0 328, v00610DC8_0, 32;
    %ix/load 0, 11, 0;
    %load/vp0 360, v00610DC8_0, 32;
    %ix/load 0, 12, 0;
    %load/vp0 392, v00610DC8_0, 32;
    %ix/load 0, 13, 0;
    %load/vp0 424, v00610DC8_0, 32;
    %ix/load 0, 14, 0;
    %load/vp0 456, v00610DC8_0, 32;
    %ix/load 0, 15, 0;
    %load/vp0 488, v00610DC8_0, 32;
    %vpi_func 12 60 "$fscanf", 8, 32, v00610C68_0, "%h %h %h %h %h %h %h %h  %h %h %h %h %h %h %h %h\012", &A<v0065F168, v00610DC8_0 >, &A<v0065F168, 40 32>, &A<v0065F168, 72 32>, &A<v0065F168, 104 32>, &A<v0065F168, 136 32>, &A<v0065F168, 168 32>, &A<v0065F168, 200 32>, &A<v0065F168, 232 32>, &A<v0065F168, 264 32>, &A<v0065F168, 296 32>, &A<v0065F168, 328 32>, &A<v0065F168, 360 32>, &A<v0065F168, 392 32>, &A<v0065F168, 424 32>, &A<v0065F168, 456 32>, &A<v0065F168, 488 32>;
    %set/v v0065EF00_0, 8, 32;
    %ix/load 0, 1, 0;
    %load/vp0/s 8, v00610D70_0, 32;
    %set/v v00610D70_0, 8, 32;
    %jmp T_12.4;
T_12.5 ;
    %vpi_call 12 63 "$fclose", v00610C68_0;
    %end;
t_1 %join;
    %end;
    .thread T_12;
    .scope S_0060E060;
T_13 ;
    %wait E_0060CFF0;
    %ix/load 1, 24, 0;
    %mov 4, 0, 1;
    %jmp/1 T_13.0, 4;
    %load/x1p 8, v00610CC0_0, 8;
    %jmp T_13.1;
T_13.0 ;
    %mov 8, 2, 8;
T_13.1 ;
; Save base=8 wid=8 in lookaside.
    %ix/load 0, 3, 0;
    %load/vp0 16, v00610B08_0, 32;
    %ix/get 3, 16, 32;
    %jmp/1 t_3, 4;
    %ix/load 0, 8, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0065F168, 0, 8;
t_3 ;
    %ix/load 1, 16, 0;
    %mov 4, 0, 1;
    %jmp/1 T_13.2, 4;
    %load/x1p 8, v00610CC0_0, 8;
    %jmp T_13.3;
T_13.2 ;
    %mov 8, 2, 8;
T_13.3 ;
; Save base=8 wid=8 in lookaside.
    %ix/load 0, 2, 0;
    %load/vp0 16, v00610B08_0, 32;
    %ix/get 3, 16, 32;
    %jmp/1 t_4, 4;
    %ix/load 0, 8, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0065F168, 0, 8;
t_4 ;
    %ix/load 1, 8, 0;
    %mov 4, 0, 1;
    %jmp/1 T_13.4, 4;
    %load/x1p 8, v00610CC0_0, 8;
    %jmp T_13.5;
T_13.4 ;
    %mov 8, 2, 8;
T_13.5 ;
; Save base=8 wid=8 in lookaside.
    %ix/load 0, 1, 0;
    %load/vp0 16, v00610B08_0, 32;
    %ix/get 3, 16, 32;
    %jmp/1 t_5, 4;
    %ix/load 0, 8, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0065F168, 0, 8;
t_5 ;
    %load/v 8, v00610CC0_0, 8; Only need 8 of 32 bits
; Save base=8 wid=8 in lookaside.
    %ix/getv 3, v00610B08_0;
    %jmp/1 t_6, 4;
    %ix/load 0, 8, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0065F168, 0, 8;
t_6 ;
    %jmp T_13;
    .thread T_13;
    .scope S_0060ED20;
T_14 ;
    %wait E_0060C6F0;
    %ix/load 1, 26, 0;
    %mov 4, 0, 1;
    %jmp/1 T_14.0, 4;
    %load/x1p 8, v00660010_0, 6;
    %jmp T_14.1;
T_14.0 ;
    %mov 8, 2, 6;
T_14.1 ;
; Save base=8 wid=6 in lookaside.
    %set/v v00661140_0, 8, 6;
    %load/v 8, v00660010_0, 6; Only need 6 of 32 bits
; Save base=8 wid=6 in lookaside.
    %set/v v0065FA90_0, 8, 6;
    %ix/load 1, 9, 0;
    %mov 4, 0, 1;
    %jmp/1 T_14.2, 4;
    %load/x1p 8, v0065FFB8_0, 1;
    %jmp T_14.3;
T_14.2 ;
    %mov 8, 2, 1;
T_14.3 ;
; Save base=8 wid=1 in lookaside.
    %set/v v006610E8_0, 8, 1;
    %ix/load 1, 8, 0;
    %mov 4, 0, 1;
    %jmp/1 T_14.4, 4;
    %load/x1p 8, v0065FFB8_0, 1;
    %jmp T_14.5;
T_14.4 ;
    %mov 8, 2, 1;
T_14.5 ;
; Save base=8 wid=1 in lookaside.
    %set/v v0065FAE8_0, 8, 1;
    %ix/load 1, 7, 0;
    %mov 4, 0, 1;
    %jmp/1 T_14.6, 4;
    %load/x1p 8, v0065FFB8_0, 1;
    %jmp T_14.7;
T_14.6 ;
    %mov 8, 2, 1;
T_14.7 ;
; Save base=8 wid=1 in lookaside.
    %set/v v00660068_0, 8, 1;
    %ix/load 1, 6, 0;
    %mov 4, 0, 1;
    %jmp/1 T_14.8, 4;
    %load/x1p 8, v0065FFB8_0, 1;
    %jmp T_14.9;
T_14.8 ;
    %mov 8, 2, 1;
T_14.9 ;
; Save base=8 wid=1 in lookaside.
    %set/v v00660278_0, 8, 1;
    %ix/load 1, 5, 0;
    %mov 4, 0, 1;
    %jmp/1 T_14.10, 4;
    %load/x1p 8, v0065FFB8_0, 1;
    %jmp T_14.11;
T_14.10 ;
    %mov 8, 2, 1;
T_14.11 ;
; Save base=8 wid=1 in lookaside.
    %set/v v0065FB98_0, 8, 1;
    %ix/load 1, 3, 0;
    %mov 4, 0, 1;
    %jmp/1 T_14.12, 4;
    %load/x1p 8, v0065FFB8_0, 2;
    %jmp T_14.13;
T_14.12 ;
    %mov 8, 2, 2;
T_14.13 ;
; Save base=8 wid=2 in lookaside.
    %set/v v0065FCA0_0, 8, 2;
    %ix/load 1, 2, 0;
    %mov 4, 0, 1;
    %jmp/1 T_14.14, 4;
    %load/x1p 8, v0065FFB8_0, 1;
    %jmp T_14.15;
T_14.14 ;
    %mov 8, 2, 1;
T_14.15 ;
; Save base=8 wid=1 in lookaside.
    %set/v v0065FF08_0, 8, 1;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_14.16, 4;
    %load/x1p 8, v0065FFB8_0, 1;
    %jmp T_14.17;
T_14.16 ;
    %mov 8, 2, 1;
T_14.17 ;
; Save base=8 wid=1 in lookaside.
    %set/v v0065FD50_0, 8, 1;
    %load/v 8, v0065FFB8_0, 1; Only need 1 of 10 bits
; Save base=8 wid=1 in lookaside.
    %set/v v0065FEB0_0, 8, 1;
    %ix/load 1, 21, 0;
    %mov 4, 0, 1;
    %jmp/1 T_14.18, 4;
    %load/x1p 8, v00660010_0, 5;
    %jmp T_14.19;
T_14.18 ;
    %mov 8, 2, 5;
T_14.19 ;
; Save base=8 wid=5 in lookaside.
    %set/v v006617C8_0, 8, 5;
    %ix/load 1, 16, 0;
    %mov 4, 0, 1;
    %jmp/1 T_14.20, 4;
    %load/x1p 8, v00660010_0, 5;
    %jmp T_14.21;
T_14.20 ;
    %mov 8, 2, 5;
T_14.21 ;
; Save base=8 wid=5 in lookaside.
    %set/v v00661198_0, 8, 5;
    %load/v 8, v006611F0_0, 32;
    %set/v v00660118_0, 8, 32;
    %load/v 8, v0065FC48_0, 32;
    %set/v v0065F8D8_0, 8, 32;
    %load/v 8, v00660010_0, 16; Only need 16 of 32 bits
; Save base=8 wid=16 in lookaside.
    %set/v v0065F988_0, 8, 16;
    %load/v 8, v00660010_0, 6; Only need 6 of 32 bits
; Save base=8 wid=6 in lookaside.
    %set/v v0065FA90_0, 8, 6;
    %load/v 8, v0065FBF0_0, 32;
    %cassign/v v00661090_0, 8, 32;
    %cassign/link v00661090_0, v0065FBF0_0;
    %jmp T_14;
    .thread T_14;
    .scope S_0060F7C0;
T_15 ;
    %vpi_call 2 9 "$dumpfile", "processor.vcd";
    %vpi_call 2 10 "$dumpvars", 1'sb0, S_0060ED20;
    %set/v v00661820_0, 0, 1;
    %set/v v00661668_0, 1, 1;
    %delay 10000, 0;
    %set/v v00661668_0, 0, 1;
    %delay 1410065408, 2;
    %vpi_call 2 15 "$finish";
    %end;
    .thread T_15;
    .scope S_0060F7C0;
T_16 ;
    %delay 10000, 0;
    %load/v 40, v00661820_0, 1;
    %inv 40, 1;
    %set/v v00661820_0, 40, 1;
    %jmp T_16;
    .thread T_16;
    .scope S_0060F848;
T_17 ;
    %wait E_0060D2B0;
    %load/v 40, v006618D0_0, 1;
    %cmpi/u 40, 0, 1;
    %jmp/0xz  T_17.0, 4;
    %load/v 40, v00661350_0, 2;
    %set/v v006616C0_0, 40, 2;
    %jmp T_17.1;
T_17.0 ;
    %load/v 40, v006613A8_0, 2;
    %set/v v006616C0_0, 40, 2;
T_17.1 ;
    %jmp T_17;
    .thread T_17, $push;
# The file index is used to find the file name in the following table.
:file_names 14;
    "N/A";
    "<interactive>";
    "processor_tb.v";
    "processor.v";
    "RegFile.v";
    "CtrlUnit.v";
    "2ToOneMux_5.v";
    "2ToOneMux_32.v";
    "SignExtend.v";
    "ALU.v";
    "ALUCtrl.v";
    "jump.v";
    "memory.v";
    "2to1MUX.v";
